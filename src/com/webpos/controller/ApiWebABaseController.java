package com.webpos.controller;import com.webpos.entity.Admin;import com.webpos.entity.User;import java.io.File;import java.io.IOException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import org.apache.commons.fileupload.servlet.ServletFileUpload;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.multipart.MultipartHttpServletRequest;import org.springframework.web.servlet.ModelAndView;public abstract class ApiWebABaseController{  public static final String SESSION_LOGIN_USER = "user";  public static final String SESSION_ADMIN_USER = "admin";  public static final String SESSION_CASHIER_USER = "cashRegister";  public static final String SESSION_STORE_USER = "store";  public static final String SESSION_MERCHANT_USER = "merchant";  public static final String SESSION_AGENT_USER = "agent";  public static final String SESSION_COMMERCE_TEAM_USER = "commerceTeam";  public static final String SESSION_COMMERCE_USER = "commerce";  public static final String COOKIE_LOGIN_USER_ROLE = "userRole";  public static final String COOKIE_LOGIN_ADMIN_ROLE = "adminRole";  public static final String VIEW_NAME_SUB = "subViewName";  public static final String ACTION_ADD = "add";  public static final String ACTION_UPDATE = "update";  public static final String LANGUAGE_EN = "en";  public static final String LANGUAGE_ZH = "zh";  public static final String SESSION_LANGUAGE = "language";  @Autowired  protected HttpServletRequest request;  @Autowired  protected HttpSession session;    public boolean isAdminLogin()  {    if (this.session.getAttribute("admin") != null) {      return true;    }    return false;  }    public Admin getAdminLogin()  {    if (isAdminLogin()) {      return (Admin)this.session.getAttribute("admin");    }    return null;  }    public boolean isLogin()  {    if (this.session.getAttribute("user") != null) {      return true;    }    return false;  }    public User getLoginUser()  {    if (isLogin()) {      return (User)this.session.getAttribute("user");    }    return null;  }    public boolean isWeixinBrowse()  {    String agent = this.request.getHeader("user-agent");    if (agent.indexOf("MicroMessenger") <= 0) {      return false;    }    return true;  }    public boolean isAlipayBrowse()  {    String agent = this.request.getHeader("user-agent");    if (agent.indexOf("AlipayClient") <= 0) {      return false;    }    return true;  }    public boolean isQQBrowse()  {    String agent = this.request.getHeader("user-agent");    if (agent.indexOf("QQ") <= 0) {      return false;    }    return true;  }    public boolean isBaiduBrowse()  {    String agent = this.request.getHeader("user-agent");    if (agent.indexOf("Baidu") <= 0) {      return false;    }    return true;  }    public boolean isJdBrowse()  {    String agent = this.request.getHeader("user-agent");    if (agent.indexOf("jdPay") <= 0) {      return false;    }    return true;  }    protected ModelAndView buildModelAndView(String viewName)  {    ModelAndView modelAndView = new ModelAndView();    modelAndView.setViewName("pos/web/build");        String menuName = this.request.getParameter("selectedMenuId");    modelAndView.addObject("selectedMenuId", menuName);    modelAndView.addObject("subViewName", viewName);    modelAndView.addObject("user", getLoginUser());        return modelAndView;  }    protected File buildFile(String localPath)  {    File file = new File(localPath);    if (!file.exists()) {      file.mkdirs();    }    return file;  }    protected MultipartFile getUploadFile(HttpServletRequest request, String formFileName)  {    MultipartFile file = null;        boolean isMultipart = ServletFileUpload.isMultipartContent(request);    if (isMultipart)    {      MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest)request;      file = multipartRequest.getFile(formFileName);    }    return file;  }    protected File saveFile(MultipartFile file, String savePath)  {    File saveFile = null;    try    {      saveFile = buildFile(savePath);      file.transferTo(saveFile);    }    catch (IllegalStateException|IOException e)    {      e.printStackTrace();    }    return saveFile;  }}