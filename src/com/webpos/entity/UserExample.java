package com.webpos.entity;import com.webpos.tools.BaseQuery;import java.util.ArrayList;import java.util.List;public class UserExample  extends BaseQuery{  private static final long serialVersionUID = 1L;  protected String orderByClause;  protected boolean distinct;  protected List<Criteria> oredCriteria;    public UserExample()  {    this.oredCriteria = new ArrayList();  }    public void setOrderByClause(String orderByClause)  {    this.orderByClause = orderByClause;  }    public String getOrderByClause()  {    return this.orderByClause;  }    public void setDistinct(boolean distinct)  {    this.distinct = distinct;  }    public boolean isDistinct()  {    return this.distinct;  }    public List<Criteria> getOredCriteria()  {    return this.oredCriteria;  }    public void or(Criteria criteria)  {    this.oredCriteria.add(criteria);  }    public Criteria or()  {    Criteria criteria = createCriteriaInternal();    this.oredCriteria.add(criteria);    return criteria;  }    public Criteria createCriteria()  {    Criteria criteria = createCriteriaInternal();    if (this.oredCriteria.size() == 0) {      this.oredCriteria.add(criteria);    }    return criteria;  }    protected Criteria createCriteriaInternal()  {    Criteria criteria = new Criteria();    return criteria;  }    public void clear()  {    this.oredCriteria.clear();    this.orderByClause = null;    this.distinct = false;  }    protected static abstract class GeneratedCriteria  {    protected List<UserExample.Criterion> criteria;        protected GeneratedCriteria()    {      this.criteria = new ArrayList();    }        public boolean isValid()    {      return this.criteria.size() > 0;    }        public List<UserExample.Criterion> getAllCriteria()    {      return this.criteria;    }        public List<UserExample.Criterion> getCriteria()    {      return this.criteria;    }        protected void addCriterion(String condition)    {      if (condition == null) {        throw new RuntimeException("Value for condition cannot be null");      }      this.criteria.add(new UserExample.Criterion(condition));    }        protected void addCriterion(String condition, Object value, String property)    {      if (value == null) {        throw new RuntimeException("Value for " + property + " cannot be null");      }      this.criteria.add(new UserExample.Criterion(condition, value));    }        protected void addCriterion(String condition, Object value1, Object value2, String property)    {      if ((value1 == null) || (value2 == null)) {        throw new RuntimeException("Between values for " + property + " cannot be null");      }      this.criteria.add(new UserExample.Criterion(condition, value1, value2));    }        public UserExample.Criteria andNameLikeTo(String name)    {      addCriterion("user_id like", "%" + name + "%", "user_id");      return (UserExample.Criteria)this;    }        public UserExample.Criteria andParentLikeTo(String name)    {      addCriterion("parent like", "%" + name + "%", "parent");      return (UserExample.Criteria)this;    }        public UserExample.Criteria andDtAddtimeGreaterThanOrEqualTo(String value)    {      addCriterion("ctime >=", value, "ctime");      return (UserExample.Criteria)this;    }        public UserExample.Criteria andDtAddtimeLessThanOrEqualTo(String value)    {      addCriterion("ctime <=", value, "ctime");      return (UserExample.Criteria)this;    }        public UserExample.Criteria andParentEqualTo(String name)    {      addCriterion("parent =", name, "parent");      return (UserExample.Criteria)this;    }  }    public static class Criterion  {    private String condition;    private Object value;    private Object secondValue;    private boolean noValue;    private boolean singleValue;    private boolean betweenValue;    private boolean listValue;    private String typeHandler;        public String getCondition()    {      return this.condition;    }        public Object getValue()    {      return this.value;    }        public Object getSecondValue()    {      return this.secondValue;    }        public boolean isNoValue()    {      return this.noValue;    }        public boolean isSingleValue()    {      return this.singleValue;    }        public boolean isBetweenValue()    {      return this.betweenValue;    }        public boolean isListValue()    {      return this.listValue;    }        public String getTypeHandler()    {      return this.typeHandler;    }        protected Criterion(String condition)    {      this.condition = condition;      this.typeHandler = null;      this.noValue = true;    }        protected Criterion(String condition, Object value, String typeHandler)    {      this.condition = condition;      this.value = value;      this.typeHandler = typeHandler;      if ((value instanceof List)) {        this.listValue = true;      } else {        this.singleValue = true;      }    }        protected Criterion(String condition, Object value)    {      this(condition, value, null);    }        protected Criterion(String condition, Object value, Object secondValue, String typeHandler)    {      this.condition = condition;      this.value = value;      this.secondValue = secondValue;      this.typeHandler = typeHandler;      this.betweenValue = true;    }        protected Criterion(String condition, Object value, Object secondValue)    {      this(condition, value, secondValue, null);    }  }    public static class Criteria    extends UserExample.GeneratedCriteria  {}}